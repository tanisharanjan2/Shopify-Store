{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:4000/api'\n});\n\n// Request Interceptor: Attaches the JWT token to every outgoing request\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// --- ADDED: Reusable function to track custom events ---\nexport const trackEvent = async (eventName, details = {}) => {\n  try {\n    // The interceptor will automatically add the auth token\n    await API.post('/events', {\n      eventName,\n      details\n    });\n    console.log(`Event tracked: ${eventName}`);\n  } catch (err) {\n    console.error('Failed to track event:', err);\n  }\n};\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","trackEvent","eventName","details","post","console","log","err"],"sources":["C:/Users/HP/Downloads/xeno_project_v2/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:4000/api'\n});\n\n// Request Interceptor: Attaches the JWT token to every outgoing request\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// --- ADDED: Reusable function to track custom events ---\nexport const trackEvent = async (eventName, details = {}) => {\n  try {\n    // The interceptor will automatically add the auth token\n    await API.post('/events', { eventName, details });\n    console.log(`Event tracked: ${eventName}`);\n  } catch (err) {\n    console.error('Failed to track event:', err);\n  }\n};\n\nexport default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3D,IAAI;IACF;IACA,MAAMnB,GAAG,CAACoB,IAAI,CAAC,SAAS,EAAE;MAAEF,SAAS;MAAEC;IAAQ,CAAC,CAAC;IACjDE,OAAO,CAACC,GAAG,CAAC,kBAAkBJ,SAAS,EAAE,CAAC;EAC5C,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZF,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAES,GAAG,CAAC;EAC9C;AACF,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}