{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\xeno_project_v2\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardPage() {\n  _s();\n  const [overview, setOverview] = useState(null);\n  const [topCustomers, setTopCustomers] = useState([]);\n  const [salesTrend, setSalesTrend] = useState([]);\n  const [ingesting, setIngesting] = useState(false);\n  const [error, setError] = useState('');\n  const handleLoadData = async source => {\n    try {\n      setIngesting(true);\n      setError('');\n      const token = localStorage.getItem('token');\n      const {\n        tenantId\n      } = jwtDecode(token);\n      if (source === 'sample') {\n        // Load Sample Data via API endpoints\n        await API.post(`/ingest/tenant/${tenantId}/sample`);\n      } else if (source === 'shopify') {\n        // Shopify ingestion (same as DashboardLayout)\n        await API.post(`/ingest/tenant/${tenantId}/shopify`);\n\n        // Fetch Shopify data after ingestion\n        const [productsRes, customersRes, ordersRes] = await Promise.all([API.get('/shopify/sync/products'), API.get('/shopify/sync/customers'), API.get('/shopify/sync/orders')]);\n        const customers = customersRes.data.data || [];\n        const orders = ordersRes.data.data || [];\n\n        // Overview\n        setOverview({\n          totalCustomers: customers.length,\n          totalOrders: orders.length,\n          revenue: orders.reduce((sum, order) => sum + parseFloat(order.total_price || 0), 0)\n        });\n\n        // Top 5 customers by spend\n        const topMap = {};\n        orders.forEach(order => {\n          const c = order.customer;\n          if (c !== null && c !== void 0 && c.id) {\n            if (!topMap[c.id]) {\n              const cust = customers.find(cust => cust.id === c.id);\n              topMap[c.id] = {\n                id: c.id,\n                name: cust ? `${cust.first_name} ${cust.last_name}` : 'Unknown',\n                spend: 0\n              };\n            }\n            topMap[c.id].spend += parseFloat(order.total_price || 0);\n          }\n        });\n        setTopCustomers(Object.values(topMap).sort((a, b) => b.spend - a.spend).slice(0, 5));\n\n        // Sales Trend (last 30 days)\n        const today = new Date();\n        const trend = Array.from({\n          length: 30\n        }).map((_, i) => {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          const dateStr = date.toISOString().slice(0, 10);\n          const dailyRevenue = orders.filter(o => o.created_at.slice(0, 10) === dateStr).reduce((sum, o) => sum + parseFloat(o.total_price || 0), 0);\n          return {\n            date: dateStr,\n            total: dailyRevenue\n          };\n        }).reverse();\n        setSalesTrend(trend);\n      }\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError(`Failed to ingest ${source} data.`);\n    } finally {\n      setIngesting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), !overview && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLoadData('sample'),\n        disabled: ingesting,\n        style: buttonStyle,\n        children: ingesting ? 'Loading...' : 'Load Sample Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLoadData('shopify'),\n        disabled: ingesting,\n        style: buttonStyle,\n        children: ingesting ? 'Loading...' : 'Load Shopify Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#eef',\n          padding: '20px',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your dashboard is empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click the button above to load sample or Shopify data.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), overview && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Customers: \", overview.totalCustomers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Orders: \", overview.totalOrders]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Revenue: \\u20B9\", overview.revenue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topCustomers.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [c.name, \": \\u20B9\", c.spend.toFixed(2)]\n        }, c.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales Trend (last 30 days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: salesTrend.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [s.date, \": \\u20B9\", s.total.toFixed(2)]\n        }, s.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"rPegrafuxYvk3XQO2OTMgNxYyrI=\");\n_c = DashboardPage;\nconst buttonStyle = {\n  padding: '12px 25px',\n  margin: '0 10px',\n  fontSize: '16px',\n  borderRadius: '8px',\n  border: '1px solid #007bff',\n  backgroundColor: '#fff',\n  color: '#007bff',\n  cursor: 'pointer'\n};\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","API","jsxDEV","_jsxDEV","DashboardPage","_s","overview","setOverview","topCustomers","setTopCustomers","salesTrend","setSalesTrend","ingesting","setIngesting","error","setError","handleLoadData","source","token","localStorage","getItem","tenantId","post","productsRes","customersRes","ordersRes","Promise","all","get","customers","data","orders","totalCustomers","length","totalOrders","revenue","reduce","sum","order","parseFloat","total_price","topMap","forEach","c","customer","id","cust","find","name","first_name","last_name","spend","Object","values","sort","a","b","slice","today","Date","trend","Array","from","map","_","i","date","setDate","getDate","dateStr","toISOString","dailyRevenue","filter","o","created_at","total","reverse","err","console","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","onClick","disabled","buttonStyle","marginTop","backgroundColor","borderRadius","color","toFixed","s","_c","fontSize","border","cursor","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/xeno_project_v2/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport API from '../api';\n\nexport default function DashboardPage() {\n  const [overview, setOverview] = useState(null);\n  const [topCustomers, setTopCustomers] = useState([]);\n  const [salesTrend, setSalesTrend] = useState([]);\n  const [ingesting, setIngesting] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleLoadData = async (source) => {\n    try {\n      setIngesting(true);\n      setError('');\n      const token = localStorage.getItem('token');\n      const { tenantId } = jwtDecode(token);\n\n      if (source === 'sample') {\n        // Load Sample Data via API endpoints\n        await API.post(`/ingest/tenant/${tenantId}/sample`);\n      } else if (source === 'shopify') {\n        // Shopify ingestion (same as DashboardLayout)\n        await API.post(`/ingest/tenant/${tenantId}/shopify`);\n\n        // Fetch Shopify data after ingestion\n        const [productsRes, customersRes, ordersRes] = await Promise.all([\n          API.get('/shopify/sync/products'),\n          API.get('/shopify/sync/customers'),\n          API.get('/shopify/sync/orders')\n        ]);\n\n        const customers = customersRes.data.data || [];\n        const orders = ordersRes.data.data || [];\n\n        // Overview\n        setOverview({\n          totalCustomers: customers.length,\n          totalOrders: orders.length,\n          revenue: orders.reduce((sum, order) => sum + parseFloat(order.total_price || 0), 0)\n        });\n\n        // Top 5 customers by spend\n        const topMap = {};\n        orders.forEach(order => {\n          const c = order.customer;\n          if (c?.id) {\n            if (!topMap[c.id]) {\n              const cust = customers.find(cust => cust.id === c.id);\n              topMap[c.id] = { id: c.id, name: cust ? `${cust.first_name} ${cust.last_name}` : 'Unknown', spend: 0 };\n            }\n            topMap[c.id].spend += parseFloat(order.total_price || 0);\n          }\n        });\n        setTopCustomers(Object.values(topMap).sort((a, b) => b.spend - a.spend).slice(0, 5));\n\n        // Sales Trend (last 30 days)\n        const today = new Date();\n        const trend = Array.from({ length: 30 }).map((_, i) => {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          const dateStr = date.toISOString().slice(0, 10);\n          const dailyRevenue = orders\n            .filter(o => o.created_at.slice(0, 10) === dateStr)\n            .reduce((sum, o) => sum + parseFloat(o.total_price || 0), 0);\n          return { date: dateStr, total: dailyRevenue };\n        }).reverse();\n        setSalesTrend(trend);\n      }\n\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError(`Failed to ingest ${source} data.`);\n    } finally {\n      setIngesting(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '40px', textAlign: 'center' }}>\n      <h1>Dashboard</h1>\n\n      {!overview && (\n        <div style={{ margin: '20px 0' }}>\n          <button\n            onClick={() => handleLoadData('sample')}\n            disabled={ingesting}\n            style={buttonStyle}\n          >\n            {ingesting ? 'Loading...' : 'Load Sample Data'}\n          </button>\n          <button\n            onClick={() => handleLoadData('shopify')}\n            disabled={ingesting}\n            style={buttonStyle}\n          >\n            {ingesting ? 'Loading...' : 'Load Shopify Data'}\n          </button>\n          <div style={{ marginTop: '20px', backgroundColor: '#eef', padding: '20px', borderRadius: '12px' }}>\n            <h4>Your dashboard is empty!</h4>\n            <p>Click the button above to load sample or Shopify data.</p>\n          </div>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n      )}\n\n      {overview && (\n        <div>\n          <h2>Overview</h2>\n          <p>Total Customers: {overview.totalCustomers}</p>\n          <p>Total Orders: {overview.totalOrders}</p>\n          <p>Revenue: ₹{overview.revenue.toFixed(2)}</p>\n\n          <h3>Top Customers</h3>\n          <ul>\n            {topCustomers.map(c => (\n              <li key={c.id}>{c.name}: ₹{c.spend.toFixed(2)}</li>\n            ))}\n          </ul>\n\n          <h3>Sales Trend (last 30 days)</h3>\n          <ul>\n            {salesTrend.map(s => (\n              <li key={s.date}>{s.date}: ₹{s.total.toFixed(2)}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst buttonStyle = {\n  padding: '12px 25px',\n  margin: '0 10px',\n  fontSize: '16px',\n  borderRadius: '8px',\n  border: '1px solid #007bff',\n  backgroundColor: '#fff',\n  color: '#007bff',\n  cursor: 'pointer'\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}