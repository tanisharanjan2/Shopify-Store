{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\xeno_project_v2\\\\frontend\\\\src\\\\components\\\\TopCustomersBarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopCustomersBarChart({\n  data\n}) {\n  // Normalize data to chart format\n  const chartData = data.map(customer => {\n    var _ref, _customer$spend;\n    return {\n      name: customer.name || 'Unknown',\n      'Total Spent': parseFloat((_ref = (_customer$spend = customer.spend) !== null && _customer$spend !== void 0 ? _customer$spend : customer.totalSpent) !== null && _ref !== void 0 ? _ref : 0)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      layout: \"vertical\",\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\",\n        tickFormatter: value => `₹${value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        type: \"category\",\n        dataKey: \"name\",\n        width: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => `₹${value.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Total Spent\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = TopCustomersBarChart;\nvar _c;\n$RefreshReg$(_c, \"TopCustomersBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","TopCustomersBarChart","data","chartData","map","customer","_ref","_customer$spend","name","parseFloat","spend","totalSpent","width","height","children","layout","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","type","tickFormatter","value","dataKey","formatter","toFixed","fill","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/xeno_project_v2/frontend/src/components/TopCustomersBarChart.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function TopCustomersBarChart({ data }) {\r\n  // Normalize data to chart format\r\n  const chartData = data.map(customer => ({\r\n    name: customer.name || 'Unknown',\r\n    'Total Spent': parseFloat(customer.spend ?? customer.totalSpent ?? 0),\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <BarChart data={chartData} layout=\"vertical\" margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis type=\"number\" tickFormatter={(value) => `₹${value}`} />\r\n        <YAxis type=\"category\" dataKey=\"name\" width={120} />\r\n        <Tooltip formatter={(value) => `₹${value.toFixed(2)}`} />\r\n        <Legend />\r\n        <Bar dataKey=\"Total Spent\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5G,eAAe,SAASC,oBAAoBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACrD;EACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,GAAG,CAACC,QAAQ;IAAA,IAAAC,IAAA,EAAAC,eAAA;IAAA,OAAK;MACtCC,IAAI,EAAEH,QAAQ,CAACG,IAAI,IAAI,SAAS;MAChC,aAAa,EAAEC,UAAU,EAAAH,IAAA,IAAAC,eAAA,GAACF,QAAQ,CAACK,KAAK,cAAAH,eAAA,cAAAA,eAAA,GAAIF,QAAQ,CAACM,UAAU,cAAAL,IAAA,cAAAA,IAAA,GAAI,CAAC;IACtE,CAAC;EAAA,CAAC,CAAC;EAEH,oBACEN,OAAA,CAACF,mBAAmB;IAACc,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5Cd,OAAA,CAACT,QAAQ;MAACW,IAAI,EAAEC,SAAU;MAACY,MAAM,EAAC,UAAU;MAACC,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAN,QAAA,gBAC9Fd,OAAA,CAACL,aAAa;QAAC0B,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCzB,OAAA,CAACP,KAAK;QAACiC,IAAI,EAAC,QAAQ;QAACC,aAAa,EAAGC,KAAK,IAAK,IAAIA,KAAK;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DzB,OAAA,CAACN,KAAK;QAACgC,IAAI,EAAC,UAAU;QAACG,OAAO,EAAC,MAAM;QAACjB,KAAK,EAAE;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDzB,OAAA,CAACJ,OAAO;QAACkC,SAAS,EAAGF,KAAK,IAAK,IAAIA,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDzB,OAAA,CAACH,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVzB,OAAA,CAACR,GAAG;QAACqC,OAAO,EAAC,aAAa;QAACG,IAAI,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B;AAACQ,EAAA,GAnBuBhC,oBAAoB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}