{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\xeno_project_v2\\\\frontend\\\\src\\\\pages\\\\SalesTrendPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport SalesTrendChart from '../components/SalesTrendChart';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalesTrendPage() {\n  _s();\n  const {\n    salesTrend: initialSalesTrend,\n    dataSource\n  } = useOutletContext();\n  const [salesTrend, setSalesTrend] = useState(initialSalesTrend || []);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchShopifySalesTrend = async () => {\n      if (dataSource !== 'shopify') return;\n      try {\n        setLoading(true);\n        const ordersRes = await API.get('/shopify/sync/orders');\n        const orders = ordersRes.data.data;\n\n        // Aggregate sales for last 30 days\n        const today = new Date();\n        const last30Days = Array.from({\n          length: 30\n        }, (_, i) => {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          return date.toISOString().slice(0, 10);\n        }).reverse();\n        const trendData = last30Days.map(date => {\n          const dailyTotal = orders.filter(order => order.created_at.startsWith(date)).reduce((sum, order) => sum + parseFloat(order.total_price || 0), 0);\n          return {\n            date,\n            total: dailyTotal\n          };\n        });\n        setSalesTrend(trendData);\n      } catch (err) {\n        console.error('Failed to fetch Shopify sales trend:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchShopifySalesTrend();\n  }, [dataSource]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading Sales Trend...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sales Trend (Last 30 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SalesTrendChart, {\n      data: salesTrend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SalesTrendPage, \"Y/6wVCu4dREALuS4QkXx8LPhBw4=\", false, function () {\n  return [useOutletContext];\n});\n_c = SalesTrendPage;\nvar _c;\n$RefreshReg$(_c, \"SalesTrendPage\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","SalesTrendChart","API","jsxDEV","_jsxDEV","SalesTrendPage","_s","salesTrend","initialSalesTrend","dataSource","setSalesTrend","loading","setLoading","fetchShopifySalesTrend","ordersRes","get","orders","data","today","Date","last30Days","Array","from","length","_","i","date","setDate","getDate","toISOString","slice","reverse","trendData","map","dailyTotal","filter","order","created_at","startsWith","reduce","sum","parseFloat","total_price","total","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/xeno_project_v2/frontend/src/pages/SalesTrendPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport SalesTrendChart from '../components/SalesTrendChart';\r\nimport API from '../api';\r\n\r\nexport default function SalesTrendPage() {\r\n  const { salesTrend: initialSalesTrend, dataSource } = useOutletContext();\r\n  const [salesTrend, setSalesTrend] = useState(initialSalesTrend || []);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchShopifySalesTrend = async () => {\r\n      if (dataSource !== 'shopify') return;\r\n\r\n      try {\r\n        setLoading(true);\r\n        const ordersRes = await API.get('/shopify/sync/orders');\r\n        const orders = ordersRes.data.data;\r\n\r\n        // Aggregate sales for last 30 days\r\n        const today = new Date();\r\n        const last30Days = Array.from({ length: 30 }, (_, i) => {\r\n          const date = new Date(today);\r\n          date.setDate(today.getDate() - i);\r\n          return date.toISOString().slice(0, 10);\r\n        }).reverse();\r\n\r\n        const trendData = last30Days.map(date => {\r\n          const dailyTotal = orders\r\n            .filter(order => order.created_at.startsWith(date))\r\n            .reduce((sum, order) => sum + parseFloat(order.total_price || 0), 0);\r\n          return { date, total: dailyTotal };\r\n        });\r\n\r\n        setSalesTrend(trendData);\r\n      } catch (err) {\r\n        console.error('Failed to fetch Shopify sales trend:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchShopifySalesTrend();\r\n  }, [dataSource]);\r\n\r\n  if (loading) return <h3>Loading Sales Trend...</h3>;\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <h3>Sales Trend (Last 30 Days)</h3>\r\n      <SalesTrendChart data={salesTrend} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}