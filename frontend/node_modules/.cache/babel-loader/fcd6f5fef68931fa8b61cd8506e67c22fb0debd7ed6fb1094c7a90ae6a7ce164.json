{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\xeno_project_v2\\\\frontend\\\\src\\\\components\\\\SalesTrendChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalesTrendChart({\n  data\n}) {\n  // We format the data to be used by the chart\n  const chartData = data.map(item => ({\n    // Format date to be more readable, e.g., \"Sep 10\"\n    date: format(new Date(item.date), 'MMM dd'),\n    Revenue: parseFloat(item.revenue)\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        tickFormatter: value => `₹${value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => `₹${value.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Revenue\",\n        stroke: \"#8884d8\",\n        strokeWidth: 2,\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = SalesTrendChart;\nvar _c;\n$RefreshReg$(_c, \"SalesTrendChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","format","jsxDEV","_jsxDEV","SalesTrendChart","data","chartData","map","item","date","Date","Revenue","parseFloat","revenue","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tickFormatter","value","formatter","toFixed","type","stroke","strokeWidth","activeDot","r","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/xeno_project_v2/frontend/src/components/SalesTrendChart.js"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function SalesTrendChart({ data }) {\r\n  // We format the data to be used by the chart\r\n  const chartData = data.map(item => ({\r\n    // Format date to be more readable, e.g., \"Sep 10\"\r\n    date: format(new Date(item.date), 'MMM dd'),\r\n    Revenue: parseFloat(item.revenue),\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <LineChart data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis tickFormatter={(value) => `₹${value}`} />\r\n        <Tooltip formatter={(value) => `₹${value.toFixed(2)}`} />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"Revenue\" stroke=\"#8884d8\" strokeWidth={2} activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC7G,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAChD;EACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,KAAK;IAClC;IACAC,IAAI,EAAER,MAAM,CAAC,IAAIS,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE,QAAQ,CAAC;IAC3CE,OAAO,EAAEC,UAAU,CAACJ,IAAI,CAACK,OAAO;EAClC,CAAC,CAAC,CAAC;EAEH,oBACEV,OAAA,CAACH,mBAAmB;IAACc,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5Cb,OAAA,CAACV,SAAS;MAACY,IAAI,EAAEC,SAAU;MAAAU,QAAA,gBACzBb,OAAA,CAACN,aAAa;QAACoB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvClB,OAAA,CAACR,KAAK;QAAC2B,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBlB,OAAA,CAACP,KAAK;QAAC2B,aAAa,EAAGC,KAAK,IAAK,IAAIA,KAAK;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDlB,OAAA,CAACL,OAAO;QAAC2B,SAAS,EAAGD,KAAK,IAAK,IAAIA,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDlB,OAAA,CAACJ,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVlB,OAAA,CAACT,IAAI;QAACiC,IAAI,EAAC,UAAU;QAACL,OAAO,EAAC,SAAS;QAACM,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE,CAAE;QAACC,SAAS,EAAE;UAAEC,CAAC,EAAE;QAAE;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B;AAACW,EAAA,GApBuB5B,eAAe;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}